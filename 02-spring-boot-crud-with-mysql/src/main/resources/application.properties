# db related property through these property application connects with db using auto configuration
# driver class is not needed because spring boot automatically recognize the driver and load it for us
# so for running your application you need only this three property, others will write down and explain the purpose

#spring.datasource.url=jdbc:h2:file:/data/demo
spring.datasource.url=jdbc:mysql://localhost:3306/im_learner
spring.datasource.username=imlearner
spring.datasource.password=imlearner

# this value will be none by default for mysql, it can be [none, update, create, create-drop]
# below two is used for creating table in database on startup on the basis of entity class
spring.jpa.hibernate.ddl-auto=update
#below is same as above but above has more flexibility than below
# spring.jpa.generate-ddl=false

# spring.datasource.initialization-mode property enable to execute data.sql and schema.sql on startup of application
spring.datasource.initialization-mode=always

# if platform we set as mysql then files name need to put as data-mysql.sql and schema-mysql.sql
#spring.datasource.platform=mysql

# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1


# The SQL dialect makes Hibernate generate better SQL for the chosen database, it picks automatically
# if not picks the make below uncomment
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect


# we set spring.h2.console.settings.trace to false to prevent trace output,
# and we can also disable remote access by setting spring.h2.console.settings.web-allow-others to false.
#spring.h2.console.settings.trace=false
#spring.h2.console.settings.web-allow-others=false

# show all query on the console
spring.jpa.show-sql=true



